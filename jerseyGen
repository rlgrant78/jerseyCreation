function embedTheFont(stid){
  document.getElementById(stid).innerHTML=`@font-face {
              font-family: 'abolitionregular';
              src: url("data:font/woff;charset=utf-8;base64,") format('woff');
font-weight: normal;
              font-style: normal;
            }`;
}

function chgOutline(color) {
  document.getElementById("nameOl2").style.stroke = color;
  document.getElementById("numOl2").style.stroke = color;
}

function chgStitching() {
  var sColor = document.getElementById("stitchingColor").value;
  document.getElementById("plate2").style.stroke = sColor;
}

function chgFill() {
  var fColor = document.getElementById("jerseyTextColor").value;
  document.getElementById("jName2").style.fill = fColor;
  document.getElementById("jNum2").style.fill = fColor;
}

const pSBC = (p, c0, c1, l) => {
  let r,
    g,
    b,
    P,
    f,
    t,
    h,
    i = parseInt,
    m = Math.round,
    a = typeof c1 == "string";
  if (
    typeof p != "number" ||
    p < -1 ||
    p > 1 ||
    typeof c0 != "string" ||
    (c0[0] != "r" && c0[0] != "#") ||
    (c1 && !a)
  )
    return null;
  if (!this.pSBCr)
    this.pSBCr = (d) => {
      let n = d.length,
        x = {};
      if (n > 9) {
        ([r, g, b, a] = d = d.split(",")), (n = d.length);
        if (n < 3 || n > 4) return null;
        (x.r = i(r[3] == "a" ? r.slice(5) : r.slice(4))),
          (x.g = i(g)),
          (x.b = i(b)),
          (x.a = a ? parseFloat(a) : -1);
      } else {
        if (n == 8 || n == 6 || n < 4) return null;
        if (n < 6)
          d =
            "#" +
            d[1] +
            d[1] +
            d[2] +
            d[2] +
            d[3] +
            d[3] +
            (n > 4 ? d[4] + d[4] : "");
        d = i(d.slice(1), 16);
        if (n == 9 || n == 5)
          (x.r = (d >> 24) & 255),
            (x.g = (d >> 16) & 255),
            (x.b = (d >> 8) & 255),
            (x.a = m((d & 255) / 0.255) / 1000);
        else
          (x.r = d >> 16), (x.g = (d >> 8) & 255), (x.b = d & 255), (x.a = -1);
      }
      return x;
    };
  (h = c0.length > 9),
    (h = a ? (c1.length > 9 ? true : c1 == "c" ? !h : false) : h),
    (f = this.pSBCr(c0)),
    (P = p < 0),
    (t =
      c1 && c1 != "c"
        ? this.pSBCr(c1)
        : P
        ? { r: 0, g: 0, b: 0, a: -1 }
        : { r: 255, g: 255, b: 255, a: -1 }),
    (p = P ? p * -1 : p),
    (P = 1 - p);
  if (!f || !t) return null;
  if (l)
    (r = m(P * f.r + p * t.r)),
      (g = m(P * f.g + p * t.g)),
      (b = m(P * f.b + p * t.b));
  else
    (r = m((P * f.r ** 2 + p * t.r ** 2) ** 0.5)),
      (g = m((P * f.g ** 2 + p * t.g ** 2) ** 0.5)),
      (b = m((P * f.b ** 2 + p * t.b ** 2) ** 0.5));
  (a = f.a),
    (t = t.a),
    (f = a >= 0 || t >= 0),
    (a = f ? (a < 0 ? t : t < 0 ? a : a * P + t * p) : 0);
  if (h)
    return (
      "rgb" +
      (f ? "a(" : "(") +
      r +
      "," +
      g +
      "," +
      b +
      (f ? "," + m(a * 1000) / 1000 : "") +
      ")"
    );
  else
    return (
      "#" +
      (4294967296 + r * 16777216 + g * 65536 + b * 256 + (f ? m(a * 255) : 0))
        .toString(16)
        .slice(1, f ? undefined : -2)
    );
};

function chgMesh(color) {
  var elems = document.getElementsByTagName("ellipse");
  for (var i = 0; i < elems.length; i++) {
    elems[i].style.fill = color;
  }
}



function chgJerseyColor() {
  var color = document.getElementById("colorpicker").value;
  if (color === "black" || color === "#000000") {
    document.getElementById("bg2").style.fill = "#222222";
    chgMesh("black");
  } else {
    document.getElementById("bg2").style.fill = color;
    var meshColor = pSBC(-0.4, color);
    chgMesh(meshColor);
  }
}

function updateName(name) {
  if (typeof name === "string") {
    document.getElementById("jName2").innerHTML = name;
    document.getElementById("nameOl2").innerHTML = name;
  } else {
    resetName();
  }
}

function resetName() {
  document.getElementById("jName2").innerHTML = "Your Name";
  document.getElementById("nameOl2").innerHTML = "Your Name";
}

function resetNum() {
  document.getElementById("jNum2").innerHTML = "00";
  document.getElementById("numOl2").innerHTML = "00";
}

function updateNum() {
  var inputNumber = document.getElementById("jersey-number");
    var outputNumber2 = document.getElementById("jNum2");
  var outputNumberOutline2 = document.getElementById("numOl2");

  // if blank or if number is greater than 99 make "00"
  if (inputNumber.value == "" || inputNumber.value > 99) {
    outputNumber2.innerHTML = "00";
    outputNumberOutline2.innerHTML = "00";
    inputNumber.value = "00";
  } else {
    outputNumber2.innerHTML = inputNumber.value;
    outputNumberOutline2.innerHTML = inputNumber.value;
  }
}

var jerNam = document.getElementById("jName2").innerHTML;

var jerNum = document.getElementById("numOl2").innerHTML;

var jersColor = document.getElementById("bg2").style.fill;

var txtColor = document.getElementById("jName2").style.fill;

var olColor = document.getElementById("nameOl2").style.stroke;

var stColor = document.getElementById("plate2").style.stroke;

var dtColor = document.getElementById("mySdot").style.fill;

var btn = document.getElementById("myBtn");
var svg = document.getElementById("bg2");
var canvas = document.querySelector("canvas");

function triggerDownload (imgURI) {
  var evt = new MouseEvent('click', {
    view: window,
    bubbles: false,
    cancelable: true
  });
	if(document.getElementById("name").value=="null" || document.getElementById("name").value=="") {
  	var un = "MakeAGraphic";
  } else {
  	var enteredName = document.getElementById("name").value.replace(/[^a-zA-Z ]/g, "");
  	var un = `${enteredName}_MakeAGraphic`
  }
  var a = document.createElement('a');
  a.setAttribute('download', `${un}.png`);
  a.setAttribute('href', imgURI);
  a.setAttribute('target', '_blank');

  a.dispatchEvent(evt);
}

btn.addEventListener('click', function () {
  var canvas = document.getElementById('canvas');
  var ctx = canvas.getContext('2d');
  var data = (new XMLSerializer()).serializeToString(svg);
  var DOMURL = window.URL || window.webkitURL || window;

  var img = new Image();
  var svgBlob = new Blob([data], {type: 'image/svg+xml;charset=utf-8'});
  var url = DOMURL.createObjectURL(svgBlob);

  img.onload = function () {
    ctx.drawImage(img, 0, 0);
    DOMURL.revokeObjectURL(url);

    var imgURI = canvas
        .toDataURL('image/png')
        .replace('image/png', 'image/octet-stream');

    triggerDownload(imgURI);
  };

  img.src = url;
});
